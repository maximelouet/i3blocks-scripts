#!/usr/bin/env sh
#
# Saumon i3blocks scripts
# INTERNET (wired/wifi network info)
#

ifaceWIFI=$(echo /sys/class/net/*/wireless | awk -F '/' '{ print $5 }')
ifaceETH=$(echo /sys/class/net/en*/ | awk '{ print $NF }' | awk -F '/' '{ print $5 }')

defaultRoute=$(ip route get 1.1.1.1)
VPNActive=0
# If the default route does not go through a classic wireless or wired device,
#   we can reasonably assume there's an active VPN.
if ! echo "$defaultRoute" | grep -e ' dev wlp' -e ' dev enp' > /dev/null; then
  VPNActive=1
fi

case $BLOCK_BUTTON in
  2) # middle click: show external IPs and copy external IPv4
    IP=$(curl -s "https://ip.saumon.io")
    IP4=$(curl -s "https://ip4.saumon.io")
    IP6=$(curl -s "https://ip6.saumon.io")
    if [ "$IP" = "$IP6" ]; then
      message="$IP\n<u>IPv4</u>: $IP4 <i>(copied)</i>"
    elif [ "$IP" = "$IP4" ]; then
      message="$IP <i>(copied)</i>\n<u>IPv6</u>: $IP6"
    else
      message="$IP\n<u>IPv4</u>: $IP4 <i>(copied)</i>\n<u>IPv6</u>: $IP6"
    fi
    notify-send "External IP address" "$message"
    printf "%s" "$IP4" | xclip -i -selection clipboard 1>/dev/null 2>&1
    ;;
  3) # right click: show and copy local IPv4
    IP=$(ip addr show | awk '/inet / {print $2}' | grep -v "127.0.0.1" | head -1 | cut -d '/' -f1)
    notify-send "IPv4 address" "$IP (copied)"
    printf "%s" "$IP" | xclip -i -selection clipboard 1>/dev/null 2>&1
    ;;
esac

if [ -n "$ifaceWIFI" ] && [ "$ifaceWIFI" != "*" ]; then
  statusWIFI=$(cat -- "$(readlink -e -- /sys/class/net/"$ifaceWIFI"/operstate)")
else
  statusWIFI="unknown"
fi

if [ -n "$ifaceETH" ] && [ "$ifaceETH" != "en*" ]; then
  statusETH=$(cat -- "$(readlink -e -- /sys/class/net/"$ifaceETH"/operstate)")
else
  statusETH="unknown"
fi

if [ "$statusETH" = "up" ]; then
  printf '<span color="#8BC34A">   '
  IPaddr=$(ip addr show "$ifaceETH" | awk '/inet / {print $2}' | cut -d '/' -f1)
  case "$IPaddr" in
    192.168.*) printf "%s" "${IPaddr#'192.168.'}" ;;
    10.0.*) printf "<span font_size='small'>10.0.</span>%s" "${IPaddr#'10.0.'}" ;;
    10.1.*) printf "<span font_size='small'>10.1.</span>%s" "${IPaddr#'10.1.'}" ;;
    10.41.*) printf "<span font_size='small'>10.41.</span>%s" "${IPaddr#'10.41.'}" ;;
    *) printf "%s" "$IPaddr" ;;
  esac
  printf '</span>'
  if [ "$VPNActive" = "1" ]; then
    printf " <span color='#EC407A'> </span>"
  fi
  printf ' \n'
elif [ "$statusWIFI" = "up" ]; then
  IPaddr=$(ip addr show "$ifaceWIFI" | awk '/inet / {print $2}' | cut -d '/' -f1)
  if [ "$IPaddr" = "" ]; then
    printf "<span color='#EF6C00'>   (no IP)</span>\n"
  else
    NetName=$(iwgetid -r)
    SignalStrength=$(awk 'NR==3 {print substr($3, 1, 2)}' /proc/net/wireless)
    Is5GHz=$(iwgetid -f | grep "Frequency:5")
    if [ "$SignalStrength" -ge 50 ]; then
      signalcolor='#8BC34A'
    elif [ "$SignalStrength" -ge 30 ]; then
      signalcolor='#EF6C00'
    else
      signalcolor='#f44336'
    fi
    printf "<span color='%s'> </span><span font_size='small'> </span> <span color='#8BC34A'>" "$signalcolor"
    case "$IPaddr" in
      192.168.*) printf "%s" "${IPaddr#'192.168.'}" ;;
      10.0.*) printf "<span font_size='small'>10.0.</span>%s" "${IPaddr#'10.0.'}" ;;
      10.1.*) printf "<span font_size='small'>10.1.</span>%s" "${IPaddr#'10.1.'}" ;;
      10.41.*) printf "<span font_size='small'>10.41.</span>%s" "${IPaddr#'10.41.'}" ;;
      *) printf "%s" "$IPaddr" ;;
    esac
    printf "</span> <span font_size='small' color='#cccccc'>on</span> "
    if [ -n "$Is5GHz" ]; then
      printf "<span color='#f5b1ff'>%s</span>" "$NetName"
    else
      printf "%s" "$NetName"
    fi
    if [ "$VPNActive" = "1" ]; then
      printf " <span color='#EC407A'> </span>"
    fi
    printf " \n"
  fi
else
  printf "<span color='#ffffff'>  (no network)  </span>\n"
  exit 33
fi
